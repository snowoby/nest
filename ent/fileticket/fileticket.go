// Code generated by entc, DO NOT EDIT.

package fileticket

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the fileticket type in the database.
	Label = "file_ticket"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldOriginalFilename holds the string denoting the original_filename field in the database.
	FieldOriginalFilename = "original_filename"
	// FieldIdentifier holds the string denoting the identifier field in the database.
	FieldIdentifier = "identifier"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"

	// EdgeFiles holds the string denoting the files edge name in mutations.
	EdgeFiles = "files"
	// EdgeHosts holds the string denoting the hosts edge name in mutations.
	EdgeHosts = "hosts"

	// Table holds the table name of the fileticket in the database.
	Table = "file_tickets"
	// FilesTable is the table the holds the files relation/edge.
	FilesTable = "files"
	// FilesInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	FilesInverseTable = "files"
	// FilesColumn is the table column denoting the files relation/edge.
	FilesColumn = "file_ticket_files"
	// HostsTable is the table the holds the hosts relation/edge.
	HostsTable = "file_tickets"
	// HostsInverseTable is the table name for the Host entity.
	// It exists in this package in order to avoid circular dependency with the "host" package.
	HostsInverseTable = "hosts"
	// HostsColumn is the table column denoting the hosts relation/edge.
	HostsColumn = "host_file_tickets"
)

// Columns holds all SQL columns for fileticket fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldOriginalFilename,
	FieldIdentifier,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the FileTicket type.
var ForeignKeys = []string{
	"host_file_tickets",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
	// DefaultOriginalFilename holds the default value on creation for the "original_filename" field.
	DefaultOriginalFilename string
	// OriginalFilenameValidator is a validator for the "original_filename" field. It is called by the builders before save.
	OriginalFilenameValidator func(string) error
	// IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	IdentifierValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
